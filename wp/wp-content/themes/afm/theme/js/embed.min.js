(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // node_modules/@iframe-resizer/parent/index.umd.js
  var require_index_umd = __commonJS({
    "node_modules/@iframe-resizer/parent/index.umd.js"(exports, module) {
      !function(e, t) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).iframeResize = t();
      }(exports, function() {
        "use strict";
        const e = "[iframe-resizer]";
        const t = (t2) => `${e}[${function(e2) {
          return window.top === window.self ? `Parent page: ${e2}` : window?.parentIFrame?.getId ? `${window.parentIFrame.getId()}: ${e2}` : `Nested parent page: ${e2}`;
        }(t2)}]`, i = (e2, ...i2) => ((e3, i3, ...n2) => window?.console[e3](t(i3), ...n2))("warn", e2, ...i2), n = (t2, i2) => console?.warn((/* @__PURE__ */ ((e2) => (t3) => window.chrome ? e2(t3.replaceAll("<br>", "\n").replaceAll("<rb>", "\x1B[31;1m").replaceAll("</>", "\x1B[m").replaceAll("<b>", "\x1B[1m").replaceAll("<i>", "\x1B[3m").replaceAll("<u>", "\x1B[4m")) : e2(t3.replaceAll("<br>", "\n").replaceAll(/<[/a-z]+>/gi, "")))(/* @__PURE__ */ ((t3) => (...i3) => [`${e}[${t3}]`, ...i3].join(" "))(t2)))(i2)), o = "5.3.2", r = "[iFrameSizer]", a = r.length, s = Object.freeze({ max: 1, scroll: 1, bodyScroll: 1, documentElementScroll: 1 }), l = (e2, t2, i2, n2) => e2.addEventListener(t2, i2, n2 || false), c = (e2, t2, i2) => e2.removeEventListener(t2, i2, false), d = (e2) => {
          if (!e2)
            return "";
          let t2 = -559038744, i2 = 1103547984;
          for (let n2, o2 = 0; o2 < e2.length; o2++)
            n2 = e2.codePointAt(o2), t2 = Math.imul(t2 ^ n2, 2246822519), i2 = Math.imul(i2 ^ n2, 3266489917);
          return t2 ^= Math.imul(t2 ^ i2 >>> 15, 1935289751), i2 ^= Math.imul(i2 ^ t2 >>> 15, 3405138345), t2 ^= i2 >>> 16, i2 ^= t2 >>> 16, (2097152 * (i2 >>> 0) + (t2 >>> 11)).toString(36);
        }, u = (e2) => e2.replaceAll(/[A-Za-z]/g, (e3) => String.fromCodePoint((e3 <= "Z" ? 90 : 122) >= (e3 = e3.codePointAt(0) + 19) ? e3 : e3 - 26)), f = ["<iy><yi>Puchspk Spjluzl Rlf</><iy><iy>", "<iy><yi>Tpzzpun Spjluzl Rlf</><iy><iy>", "Aopz spiyhyf pz hchpshisl dpao ivao Jvttlyjphs huk Vwlu-Zvbyjl spjluzlz.<iy><iy><i>Jvttlyjphs Spjluzl</><iy>Mvy jvttlyjphs bzl, <p>pmyhtl-ylzpgly</> ylxbpylz h svd jvza vul aptl spjluzl mll. Mvy tvyl pumvythapvu cpzpa <b>oaawz://pmyhtl-ylzpgly.jvt/wypjpun</>.<iy><iy><i>Vwlu Zvbyjl Spjluzl</><iy>Pm fvb hyl bzpun aopz spiyhyf pu h uvu-jvttlyjphs vwlu zvbyjl wyvqlja aolu fvb jhu bzl pa mvy myll bukly aol alytz vm aol NWS C3 Spjluzl. Av jvumpyt fvb hjjlwa aolzl alytz, wslhzl zla aol <i>spjluzl</> rlf pu <p>pmyhtl-ylzpgly</> vwapvuz av <i>NWSc3</>.<iy><iy>Mvy tvyl pumvythapvu wslhzl zll: <b>oaawz://pmyhtl-ylzpgly.jvt/nws</>", "<i>NWSc3 Spjluzl Clyzpvu</><iy><iy>Aopz clyzpvu vm <p>pmyhtl-ylzpgly</> pz ilpun bzlk bukly aol alytz vm aol <i>NWS C3</> spjluzl. Aopz spjluzl hssvdz fvb av bzl <p>pmyhtl-ylzpgly</> pu Vwlu Zvbyjl wyvqljaz, iba pa ylxbpylz fvby wyvqlja av il wbispj, wyvcpkl haaypibapvu huk il spjluzlk bukly clyzpvu 3 vy shaly vm aol NUB Nlulyhs Wbispj Spjluzl.<iy><iy>Pm fvb hyl bzpun aopz spiyhyf pu h uvu-vwlu zvbyjl wyvqlja vy dlizpal, fvb dpss ullk av wbyjohzl h svd jvza vul aptl jvttlyjphs spjluzl.<iy><iy>Mvy tvyl pumvythapvu cpzpa <b>oaawz://pmyhtl-ylzpgly.jvt/wypjpun</>."], p = ["NWSc3", "zvsv", "wyv", "ibzpulzz", "vlt"], h = Object.fromEntries(["2cgs7fdf4xb", "1c9ctcccr4z", "1q2pc4eebgb", "ueokt0969w", "w2zxchhgqz", "1umuxblj2e5"].map((e2, t2) => [e2, Math.max(0, t2 - 1)])), m = (e2) => u(f[e2]), y = (e2) => {
          const t2 = e2[u("spjluzl")];
          if (!t2)
            return -1;
          const i2 = t2.split("-");
          let n2 = function(e3 = "") {
            let t3 = -2;
            const i3 = d(u(e3));
            return i3 in h && (t3 = h[i3]), t3;
          }(i2[0]);
          return 0 === n2 || ((e3) => e3[2] === d(e3[0] + e3[1]))(i2) || (n2 = -2), n2;
        }, g = {}, w = Object.freeze({ autoResize: true, bodyBackground: null, bodyMargin: null, bodyPadding: null, checkOrigin: true, direction: "vertical", inPageLinks: false, heightCalculationMethod: "auto", id: "iFrameResizer", log: false, license: void 0, mouseEvents: true, offsetHeight: null, offsetWidth: null, postMessageTarget: null, sameDomain: false, scrolling: false, sizeHeight: true, sizeWidth: false, warningTimeout: 5e3, tolerance: 0, waitForLoad: false, widthCalculationMethod: "auto", onClose: () => true, onClosed() {
        }, onInit: false, onMessage: null, onMouseEnter() {
        }, onMouseLeave() {
        }, onReady: (e2) => {
          "function" == typeof g[e2.id].onInit && (n(e2.id, "\n\x1B[31;1mDeprecated Option\x1B[m\n\nThe \x1B[1monInit()\x1B[m function is deprecated and has been replaced with \x1B[1monReady()\x1B[m. It will be removed in a future version of iFrame Resizer.\n      "), g[e2.id].onInit(e2));
        }, onResized() {
        }, onScroll: () => true }), b = { position: null, version: o };
        function v(e2) {
          function t2() {
            x(H), R(), A2("onResized", H);
          }
          function s2(e3) {
            if ("border-box" !== e3.boxSizing)
              return 0;
            return (e3.paddingTop ? parseInt(e3.paddingTop, 10) : 0) + (e3.paddingBottom ? parseInt(e3.paddingBottom, 10) : 0);
          }
          function d2(e3) {
            if ("border-box" !== e3.boxSizing)
              return 0;
            return (e3.borderTopWidth ? parseInt(e3.borderTopWidth, 10) : 0) + (e3.borderBottomWidth ? parseInt(e3.borderBottomWidth, 10) : 0);
          }
          const u2 = (e3) => C2.slice(C2.indexOf(":") + 7 + e3);
          const f2 = (e3, t3) => (i2, n2) => {
            const o2 = {};
            var r2, a2;
            r2 = function() {
              I(`Send ${e3} (${i2})`, `${e3}:${t3()}`, n2);
            }, o2[a2 = n2] || (r2(), o2[a2] = requestAnimationFrame(() => {
              o2[a2] = null;
            }));
          }, p2 = (e3, t3) => () => {
            let i2 = false;
            const n2 = (t4) => () => {
              g[d3] ? i2 && i2 !== t4 || (e3(t4, d3), i2 = t4, requestAnimationFrame(() => {
                i2 = false;
              })) : s3();
            }, o2 = n2("scroll"), r2 = n2("resize window");
            function a2(e4, t4) {
              t4(window, "scroll", o2), t4(window, "resize", r2);
            }
            function s3() {
              a2(0, c), u3.disconnect(), f3.disconnect();
            }
            const d3 = P, u3 = new ResizeObserver(n2("page observed")), f3 = new ResizeObserver(n2("iframe observed"));
            a2(0, l), u3.observe(document.body, { attributes: true, childList: true, subtree: true }), f3.observe(g[d3].iframe, { attributes: true, childList: false, subtree: false }), g[d3] && (g[d3][`stop${t3}`] = s3);
          }, h2 = (e3) => () => {
            e3 in g[P] && (g[P][e3](), delete g[P][e3]);
          }, m2 = f2("pageInfo", function() {
            const e3 = document.body.getBoundingClientRect(), t3 = H.iframe.getBoundingClientRect(), { scrollY: i2, scrollX: n2, innerHeight: o2, innerWidth: r2 } = window, { clientHeight: a2, clientWidth: s3 } = document.documentElement;
            return JSON.stringify({ iframeHeight: t3.height, iframeWidth: t3.width, clientHeight: Math.max(a2, o2 || 0), clientWidth: Math.max(s3, r2 || 0), offsetTop: parseInt(t3.top - e3.top, 10), offsetLeft: parseInt(t3.left - e3.left, 10), scrollTop: i2, scrollLeft: n2, documentHeight: a2, documentWidth: s3, windowHeight: o2, windowWidth: r2 });
          }), y2 = f2("parentInfo", function() {
            const { iframe: e3 } = H, { scrollWidth: t3, scrollHeight: i2 } = document.documentElement, { width: n2, height: o2, offsetLeft: r2, offsetTop: a2, pageLeft: s3, pageTop: l2, scale: c2 } = window.visualViewport;
            return JSON.stringify({ iframe: e3.getBoundingClientRect(), document: { scrollWidth: t3, scrollHeight: i2 }, viewport: { width: n2, height: o2, offsetLeft: r2, offsetTop: a2, pageLeft: s3, pageTop: l2, scale: c2 } });
          }), w2 = p2(m2, "PageInfo"), v2 = p2(y2, "ParentInfo"), j2 = h2("stopPageInfo"), E2 = h2("stopParentInfo");
          function F2(e3) {
            const t3 = e3.getBoundingClientRect();
            return $(), { x: Number(t3.left) + Number(b.position.x), y: Number(t3.top) + Number(b.position.y) };
          }
          function N2(e3) {
            const t3 = e3 ? F2(H.iframe) : { x: 0, y: 0 }, i2 = ((e4, t4) => ({ x: e4.width + t4.x, y: e4.height + t4.y }))(H, t3), n2 = window.parentIframe || window.parentIFrame;
            n2 ? function(t4, i3) {
              t4["scrollTo" + (e3 ? "Offset" : "")](i3.x, i3.y);
            }(n2, i2) : function(e4) {
              b.position = e4, L2(P);
            }(i2);
          }
          function L2(e3) {
            const { x: t3, y: i2 } = b.position, n2 = g[e3]?.iframe;
            false !== A2("onScroll", { iframe: n2, top: i2, left: t3, x: t3, y: i2 }) ? R() : k();
          }
          function O2(e3) {
            let t3 = {};
            if (0 === H.width && 0 === H.height) {
              const e4 = u2(9).split(":");
              t3 = { x: e4[1], y: e4[0] };
            } else
              t3 = { x: H.width, y: H.height };
            A2(e3, { iframe: H.iframe, screenX: Number(t3.x), screenY: Number(t3.y), type: H.type });
          }
          const A2 = (e3, t3) => z(P, e3, t3);
          let C2 = e2.data, H = {}, P = null;
          "[iFrameResizerChild]Ready" !== C2 ? r === `${C2}`.slice(0, a) && C2.slice(a).split(":")[0] in g && (H = function() {
            const e3 = C2.slice(a).split(":"), t3 = e3[1] ? Number(e3[1]) : 0, i2 = g[e3[0]]?.iframe, n2 = getComputedStyle(i2);
            return { iframe: i2, id: e3[0], height: t3 + s2(n2) + d2(n2), width: Number(e3[2]), type: e3[3], msg: e3[4] };
          }(), P = H.id, P ? (function(e3) {
            if (!g[e3])
              throw new Error(`${H.type} No settings for ${e3}. Message was: ${C2}`);
          }(P), H.type in { true: 1, false: 1, undefined: 1 } || (g[P].loaded = true, (null !== H.iframe || (i(P, `The iframe (${H.id}) was not found.`), 0)) && function() {
            const { origin: t3, sameDomain: i2 } = e2;
            if (i2)
              return true;
            let n2 = g[P]?.checkOrigin;
            if (n2 && "null" != `${t3}` && !(n2.constructor === Array ? function() {
              let e3 = 0, i3 = false;
              for (; e3 < n2.length; e3++)
                if (n2[e3] === t3) {
                  i3 = true;
                  break;
                }
              return i3;
            }() : function() {
              const e3 = g[P]?.remoteHost;
              return t3 === e3;
            }()))
              throw new Error(`Unexpected message received from: ${t3} for ${H.iframe.id}. Message was: ${e2.data}. This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.`);
            return true;
          }() && function() {
            switch (g[P]?.firstRun && g[P] && (g[P].firstRun = false), H.type) {
              case "close":
                T(H.iframe);
                break;
              case "message":
                r2 = u2(6), A2("onMessage", { iframe: H.iframe, message: JSON.parse(r2) });
                break;
              case "mouseenter":
                O2("onMouseEnter");
                break;
              case "mouseleave":
                O2("onMouseLeave");
                break;
              case "autoResize":
                g[P].autoResize = JSON.parse(u2(9));
                break;
              case "scrollBy":
                !function() {
                  const e4 = H.width, t3 = H.height;
                  (window.parentIframe || window).scrollBy(e4, t3);
                }();
                break;
              case "scrollTo":
                N2(false);
                break;
              case "scrollToOffset":
                N2(true);
                break;
              case "pageInfo":
                m2("start", P), w2();
                break;
              case "parentInfo":
                y2("start", P), v2();
                break;
              case "pageInfoStop":
                j2();
                break;
              case "parentInfoStop":
                E2();
                break;
              case "inPageLink":
                !function(e4) {
                  const t3 = e4.split("#")[1] || "", i2 = decodeURIComponent(t3);
                  let n2 = document.getElementById(i2) || document.getElementsByName(i2)[0];
                  n2 ? function() {
                    const e5 = F2(n2);
                    b.position = { x: e5.x, y: e5.y }, L2(P), window.location.hash = t3;
                  }() : window.top !== window.self && window.parentIFrame && window.parentIFrame.moveToAnchor(t3);
                }(u2(9));
                break;
              case "title":
                !function(e4, t3) {
                  g[t3]?.syncTitle && (g[t3].iframe.title = e4);
                }(H.msg, P);
                break;
              case "reset":
                M(H);
                break;
              case "init":
                t2(), function(e4) {
                  try {
                    g[e4].sameDomain = !!g[e4]?.iframe?.contentWindow?.iframeChildListener;
                  } catch (t3) {
                    g[e4].sameDomain = false;
                  }
                }(P), (e3 = H.msg) !== o && (void 0 !== e3 || n(P, "<rb>Legacy version detected in iframe</>\n\nDetected legacy version of child page script. It is recommended to update the page in the iframe to use <b>@iframe-resizer/child</>.\n\nSee <u>https://iframe-resizer.com/setup/#child-page-setup</> for more details.\n")), W = true, A2("onReady", H.iframe);
                break;
              default:
                if (0 === H.width && 0 === H.height)
                  return void i(P, `Unsupported message received (${H.type}), this is likely due to the iframe containing a later version of iframe-resizer than the parent page`);
                if (0 === H.width || 0 === H.height)
                  return;
                if (document.hidden)
                  return;
                t2();
            }
            var e3, r2;
          }())) : i("", "iframeResizer received messageData without id, message was: ", C2)) : Object.keys(g).forEach((e3) => {
            g[e3].mode >= 0 && I("iFrame requested init", S(e3), e3);
          });
        }
        function z(e2, t2, i2) {
          let n2 = null, o2 = null;
          if (g[e2]) {
            if (n2 = g[e2][t2], "function" != typeof n2)
              throw new TypeError(`${t2} on iFrame[${e2}] is not a function`);
            "onClose" === t2 || "onScroll" === t2 ? o2 = n2(i2) : setTimeout(() => n2(i2));
          }
          return o2;
        }
        function j(e2) {
          const { id: t2 } = e2;
          delete g[t2];
        }
        function T(e2) {
          const { id: t2 } = e2;
          if (false !== z(t2, "onClose", t2)) {
            try {
              e2.parentNode && e2.remove();
            } catch (e3) {
              i(t2, e3);
            }
            z(t2, "onClosed", t2), j(e2);
          }
        }
        function $(e2) {
          null === b.position && (b.position = { x: window.scrollX, y: window.scrollY });
        }
        function k() {
          b.position = null;
        }
        function R(e2) {
          null !== b.position && (window.scrollTo(b.position.x, b.position.y), k());
        }
        function M(e2) {
          $(e2.id), x(e2), I("reset", "reset", e2.id);
        }
        function x(e2) {
          function t2(t3) {
            const i3 = `${e2[t3]}px`;
            e2.iframe.style[t3] = i3;
          }
          const { id: i2 } = e2, { sizeHeight: n2, sizeWidth: o2 } = g[i2];
          n2 && t2("height"), o2 && t2("width");
        }
        function I(e2, t2, o2, a2) {
          g[o2] && (g[o2]?.postMessageTarget ? function() {
            const { iframe: e3, postMessageTarget: i2, sameDomain: n2, targetOrigin: a3 } = g[o2];
            if (n2)
              try {
                return void e3.contentWindow.iframeChildListener(r + t2);
              } catch (e4) {
              }
            i2.postMessage(r + t2, a3);
          }() : i(o2, `[${e2}] IFrame(${o2}) not found`), a2 && g[o2]?.warningTimeout && (g[o2].msgTimeout = setTimeout(function() {
            if (void 0 === g[o2])
              return;
            const { iframe: e3, loaded: t3, loadErrorShown: i2, waitForLoad: r2 } = g[o2], { sandbox: a3 } = e3;
            t3 || i2 || (g[o2].loadErrorShown = true, n(o2, `
<rb>No response from iFrame</>
            
The iframe (<i>${o2}</>) has not responded within ${g[o2].warningTimeout / 1e3} seconds. Check <b>@iframe-resizer/child</> package has been loaded in the iframe.
${r2 ? "\nThe <b>waitForLoad</> option is currently set to <i>'true'</>. If the iframe loads before the JavaScript runs, this option will prevent <i>iframe-resizer</> from initialising. To disable this, set the <b>waitForLoad</> option to <i>'false'</>.  \n" : ""}
${!(a3?.length > 0) || a3.contains("allow-scripts") && a3.contains("allow-same-origin") ? "" : "The iframe has the <b>sandbox</> attribute, please ensure it contains both the <i>'allow-same-origin'</> and <i>'allow-scripts'</> values."}

This message can be ignored if everything is working, or you can set the <b>warningTimeout</> option to a higher value or zero to suppress this warning.
`));
          }, g[o2].warningTimeout)));
        }
        function S(e2) {
          const t2 = g[e2];
          return [e2, "8", t2.sizeWidth, t2.log, "32", true, t2.autoResize, t2.bodyMargin, t2.heightCalculationMethod, t2.bodyBackground, t2.bodyPadding, t2.tolerance, t2.inPageLinks, "child", t2.widthCalculationMethod, t2.mouseEvents, t2.offsetHeight, t2.offsetWidth, t2.sizeHeight, t2.license, b.version, t2.mode].join(":");
        }
        let E = 0, W = false, F = false;
        const N = (e2) => (t2) => {
          function r2(e3) {
            if (!e3)
              return {};
            if ("object" != typeof e3)
              throw new TypeError("Options is not an object");
            return ("sizeWidth" in e3 || "sizeHeight" in e3 || "autoResize" in e3) && n(c2, '<rb>Deprecated Option</>\n\nThe <b>sizeWidth</>, <b>sizeHeight</> and <b>autoResize</> options have been replaced with new <b>direction</> option which expects values of <i>"vertical"</>, <i>"horizontal"</> or <i>"horizontal"</>.\n'), e3;
          }
          function a2(e3) {
            const t3 = g[e3]?.iframe?.title;
            return "" === t3 || void 0 === t3;
          }
          const c2 = function(i2) {
            if (i2 && "string" != typeof i2)
              throw new TypeError("Invalid id for iFrame. Expected String");
            return "" !== i2 && i2 || (i2 = function() {
              let t3 = e2?.id || w.id + E++;
              return null !== document.getElementById(t3) && (t3 += E++), t3;
            }(), t2.id = i2, (e2 || {}).log), i2;
          }(t2.id);
          return c2 in g && "iFrameResizer" in t2 ? i(c2, "Ignored iFrame, already setup.") : (function(e3) {
            var i2, o2;
            g[c2] = { iframe: t2, firstRun: true, remoteHost: t2?.src.split("/").slice(0, 3).join("/"), ...w, ...r2(e3), mode: y(e3), syncTitle: a2(c2) }, function() {
              const { direction: e4 } = g[c2];
              if ("horizontal" === e4)
                return g[c2].sizeWidth = true, void (g[c2].sizeHeight = false);
              if ("none" === e4)
                return g[c2].sizeWidth = false, g[c2].sizeHeight = false, void (g[c2].autoResize = false);
              if ("vertical" !== e4)
                throw new TypeError(c2, `Direction value of "${e4}" is not valid`);
            }(), (i2 = e3?.offsetSize || e3?.offset) && ("vertical" === g[c2].direction ? g[c2].offsetHeight = i2 : g[c2].offsetWidth = i2), e3?.offset && n(c2, "<rb>Deprecated option</>\n\n The <b>offset</> option has been renamed to <b>offsetSize</>. Use of the old name will be removed in a future version of <i>iframe-resizer</>."), null === g[c2].postMessageTarget && (g[c2].postMessageTarget = t2.contentWindow), g[c2].targetOrigin = true === g[c2].checkOrigin ? "" === (o2 = g[c2].remoteHost) || null !== o2.match(/^(about:blank|javascript:|file:\/\/)/) ? "*" : o2 : "*";
          }(e2), function() {
            const { mode: e3 } = g[c2];
            var t3;
            e3 < 0 && n("Parent", `${m(e3 + 2)}${m(2)}`), F || e3 < 0 || (F = true, t3 = `v${o} (${((e4) => u(p[e4]))(e3)})`, console.info(`%c[iframe-resizer] ${t3}`, "font-weight: bold;"), e3 < 1 && n("Parent", m(3)));
          }(), O(), function() {
            switch (t2.style.overflow = false === g[c2]?.scrolling ? "hidden" : "auto", g[c2]?.scrolling) {
              case "omit":
                break;
              case true:
                t2.scrolling = "yes";
                break;
              case false:
                t2.scrolling = "no";
                break;
              default:
                t2.scrolling = g[c2] ? g[c2].scrolling : "no";
            }
          }(), function() {
            const { bodyMargin: e3 } = g[c2];
            "number" != typeof e3 && "0" !== e3 || (g[c2].bodyMargin = `${e3}px`);
          }(), function(e3) {
            const { id: i2 } = t2, { mode: n2, waitForLoad: o2 } = g[i2];
            -1 !== n2 && -2 !== n2 && (l(t2, "load", function() {
              I("iFrame.onload", `${e3}:${W}`, i2, true), function() {
                const e4 = g[c2]?.firstRun, i3 = g[c2]?.heightCalculationMethod in s;
                !e4 && i3 && M({ iframe: t2, height: 0, width: 0, type: "init" });
              }();
            }), false === o2 && I("init", `${e3}:${W}`, i2, true));
          }(S(c2)), function() {
            if (g[c2]) {
              const { iframe: e3 } = g[c2], t3 = { close: T.bind(null, e3), disconnect: j.bind(null, e3), removeListeners() {
                n(c2, "\n<rb>Deprecated Method Name</>\n\nThe \x1B[removeListeners()</> method has been renamed to \x1B[disconnect()</>.\n"), this.disconnect();
              }, resize: I.bind(null, "Window resize", "resize", c2), moveToAnchor(e4) {
                I("Move to anchor", `moveToAnchor:${e4}`, c2);
              }, sendMessage(e4) {
                I("Send Message", `message:${e4 = JSON.stringify(e4)}`, c2);
              } };
              e3.iframeResizer = t3, e3.iFrameResizer = t3;
            }
          }()), t2?.iFrameResizer;
        };
        function L() {
          false === document.hidden && function(e2, t2) {
            const i2 = (e3) => g[e3]?.autoResize && !g[e3]?.firstRun;
            Object.keys(g).forEach(function(n2) {
              i2(n2) && I(e2, t2, n2);
            });
          }("Tab Visible", "resize");
        }
        const O = /* @__PURE__ */ ((e2) => {
          let t2 = false;
          return function() {
            return t2 ? void 0 : (t2 = true, Reflect.apply(e2, this, arguments));
          };
        })(() => {
          l(window, "message", v), l(document, "visibilitychange", L), window.iframeParentListener = (e2) => setTimeout(() => v({ data: e2, sameDomain: true }));
        }), A = "[iframeResizer] ";
        const C = /* @__PURE__ */ function() {
          function e2(e3) {
            switch (true) {
              case !e3:
                throw new TypeError(`${A}iframe is not defined`);
              case !e3.tagName:
                throw new TypeError(`${A}Not a valid DOM element`);
              case "IFRAME" !== e3.tagName.toUpperCase():
                throw new TypeError(`${A}Expected <IFRAME> tag, found <${e3.tagName}>`);
              default:
                t2(e3), i2.push(e3);
            }
          }
          let t2, i2;
          return function(n2, o2) {
            if ("undefined" == typeof window)
              return [];
            switch (t2 = N(n2), i2 = [], typeof o2) {
              case "undefined":
              case "string":
                document.querySelectorAll(o2 || "iframe").forEach(e2);
                break;
              case "object":
                e2(o2);
                break;
              default:
                throw new TypeError(`${A}Unexpected data type (${typeof o2})`);
            }
            return Object.freeze(i2);
          };
        }();
        return "undefined" != typeof window && (window.iFrameResize = window.iFrameResize || function(...e2) {
          n("", "Deprecated: iFrameResize(), please use iframeResize()"), C(...e2);
        }), C;
      });
    }
  });

  // javascript/libs/autoresize-iframe-parent.ts
  var import_parent = __toESM(require_index_umd());
  (0, import_parent.default)(
    {
      license: "GPLv3",
      waitForLoad: true
    },
    "#afm-embeded"
  );
})();
/*! Bundled license information:

@iframe-resizer/parent/index.umd.js:
  (*!
   *  @preserve
   *  
   *  @module      iframe-resizer/parent 5.3.2 (umd) - 2024-10-22
   *
   *  @license     GPL-3.0 for non-commercial use only.
   *               For commercial use, you must purchase a license from
   *               https://iframe-resizer.com/pricing
   * 
   *  @description Keep same and cross domain iFrames sized to their content 
   *
   *  @author      David J. Bradshaw <info@iframe-resizer.com>
   * 
   *  @see         {@link https://iframe-resizer.com}
   * 
   *  @copyright  (c) 2013 - 2024, David J. Bradshaw. All rights reserved.
   *)
*/
