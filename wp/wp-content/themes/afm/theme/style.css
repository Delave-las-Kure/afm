@charset "UTF-8";

@import url("https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&display=swap");

@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200");

/**
* form
**/

/**
* itertors
**/

/*!
Theme Name: afm
Theme URI: https://underscoretw.com/
Author: underscoretw.com
Author URI: https://underscoretw.com/
Description: A custom theme based on _tw
Version: 0.1.0
Tested up to: 6.2
Requires PHP: 7.4
License: GNU General Public License v2 or later
License URI: LICENSE
Text Domain: afm
Tags:

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned.

afm is based on _tw https://underscoretw.com/, (C) 2021-2023 Greg Sullivan
_tw is distributed under the terms of the GNU GPL v2 or later.

_tw is based on Underscores https://underscores.me/ and Varia https://github.com/Automattic/themes/tree/master/varia, (C) 2012-2023 Automattic, Inc.
Underscores and Varia are distributed under the terms of the GNU GPL v2 or later.
*/

/**
 * The line above injects the WordPress file header. It needs to be first,
 * before this comment.
 */

/**
 * This injects custom `@font-face` rules.
 */

/**
 * Custom `@font-face` rules
 *
 * These will be added immediately before Tailwind’s `base` layer.
 */

/**
 * This injects Tailwind's base styles and any base styles registered by
 * plugins, then adds custom base styles.
 */

/*! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/**
 * Custom styles to immediately follow Tailwind’s `base` layer
 *
 * “Add things like base typography styles [or] opinionated global resets.”
 *
 * — from https://tailwindcss.com/docs/plugins#adding-base-styles
 */

/**
 * This uses the background and foreground colors declared in the
 * `theme.json` file and is applied both to the frontend and in the block
 * editor.
*/

body {
  --afm-font-family: Nunito Sans, sans-serif;
  --layout--content-padding: var(--wp--custom--layout--content-padding-md);
  --afm-color-surface-max: var(--wp--preset--color--gray-200);
  --afm-color-surface-highest: var(--wp--preset--color--gray-50);
  --afm-color-surface-high: var(--wp--preset--color--gray-25);
  --afm-color-surface: var(--wp--preset--color--white);
  --afm-color-surface-outline-lowest: var(--wp--preset--color--gray-200);
  --afm-color-surface-outline-low: var(--wp--preset--color--gray-300);
  --afm-color-surface-outline: var(--wp--preset--color--gray-500);
  --afm-color-surface-outline-highest: var(--wp--preset--color--gray-900);
  --afm-color-on-surface-highest: var(--wp--preset--color--gray-900);
  --afm-color-on-surface-high: var(--wp--preset--color--gray-800);
  --afm-color-on-surface: var(--wp--preset--color--gray-700);
  --afm-color-on-surface-low: var(--wp--preset--color--gray-600);
  --afm-color-on-surface-lowest: var(--wp--preset--color--gray-500);
  --afm-color-on-surface-min: var(--wp--preset--color--gray-400);
  --afm-color-on-gray: var(--wp--preset--color--white);
  --afm-color-on-gray-low: var(--wp--preset--color--gray-200);
  --afm-color-on-gray-lowest: var(--wp--preset--color--gray-400);
  --afm-color-on-gray-min: var(--wp--preset--color--gray-500);
  --afm-color-gray-lowest: var(--wp--preset--color--gray-100);
  --afm-color-gray-low: var(--wp--preset--color--gray-200);
  --afm-color-gray-tint: var(--wp--preset--color--gray-500);
  --afm-color-gray: var(--wp--preset--color--gray-600);
  --afm-color-gray-high: var(--wp--preset--color--gray-700);
  --afm-color-gray-highest: var(--wp--preset--color--gray-800);
  --afm-color-on-gray-container: var(--wp--preset--color--gray-600);
  --afm-color-gray-container: var(--wp--preset--color--gray-100);
  --afm-color-gray-container-low: var(--wp--preset--color--gray-50);
  --afm-color-gray-container-lowest: var(--wp--preset--color--gray-25);
  --afm-color-gray-outline: var(
    --wp--preset--color--gray-500
  );
  --afm-color-gray-outline-lowest: var(
    --wp--preset--color--gray-100
  );
  --afm-color-on-primary: var(--wp--preset--color--white);
  --afm-color-on-primary-low: var(--wp--preset--color--primary-200);
  --afm-color-on-primary-lowest: var(--wp--preset--color--primary-400);
  --afm-color-on-primary-min: var(--wp--preset--color--primary-500);
  --afm-color-primary-lowest: var(--wp--preset--color--primary-100);
  --afm-color-primary-low: var(--wp--preset--color--primary-200);
  --afm-color-primary-tint: var(--wp--preset--color--primary-500);
  --afm-color-primary: var(--wp--preset--color--primary-600);
  --afm-color-primary-high: var(--wp--preset--color--primary-700);
  --afm-color-primary-highest: var(--wp--preset--color--primary-800);
  --afm-color-on-primary-container: var(--wp--preset--color--primary-600);
  --afm-color-primary-container: var(--wp--preset--color--primary-100);
  --afm-color-primary-container-low: var(--wp--preset--color--primary-50);
  --afm-color-primary-container-lowest: var(--wp--preset--color--primary-25);
  --afm-color-primary-outline: var(
    --wp--preset--color--primary-500
  );
  --afm-color-primary-outline-lowest: var(
    --wp--preset--color--primary-100
  );
  --afm-color-on-error: var(--wp--preset--color--white);
  --afm-color-on-error-low: var(--wp--preset--color--error-200);
  --afm-color-on-error-lowest: var(--wp--preset--color--error-400);
  --afm-color-on-error-min: var(--wp--preset--color--error-500);
  --afm-color-error-lowest: var(--wp--preset--color--error-100);
  --afm-color-error-low: var(--wp--preset--color--error-200);
  --afm-color-error-tint: var(--wp--preset--color--error-500);
  --afm-color-error: var(--wp--preset--color--error-600);
  --afm-color-error-high: var(--wp--preset--color--error-700);
  --afm-color-error-highest: var(--wp--preset--color--error-800);
  --afm-color-on-error-container: var(--wp--preset--color--error-600);
  --afm-color-error-container: var(--wp--preset--color--error-100);
  --afm-color-error-container-low: var(--wp--preset--color--error-50);
  --afm-color-error-container-lowest: var(--wp--preset--color--error-25);
  --afm-color-error-outline: var(
    --wp--preset--color--error-500
  );
  --afm-color-error-outline-lowest: var(
    --wp--preset--color--error-100
  );
  --afm-color-on-warning: var(--wp--preset--color--white);
  --afm-color-on-warning-low: var(--wp--preset--color--warning-200);
  --afm-color-on-warning-lowest: var(--wp--preset--color--warning-400);
  --afm-color-on-warning-min: var(--wp--preset--color--warning-500);
  --afm-color-warning-lowest: var(--wp--preset--color--warning-100);
  --afm-color-warning-low: var(--wp--preset--color--warning-200);
  --afm-color-warning-tint: var(--wp--preset--color--warning-500);
  --afm-color-warning: var(--wp--preset--color--warning-600);
  --afm-color-warning-high: var(--wp--preset--color--warning-700);
  --afm-color-warning-highest: var(--wp--preset--color--warning-800);
  --afm-color-on-warning-container: var(--wp--preset--color--warning-600);
  --afm-color-warning-container: var(--wp--preset--color--warning-100);
  --afm-color-warning-container-low: var(--wp--preset--color--warning-50);
  --afm-color-warning-container-lowest: var(--wp--preset--color--warning-25);
  --afm-color-warning-outline: var(
    --wp--preset--color--warning-500
  );
  --afm-color-warning-outline-lowest: var(
    --wp--preset--color--warning-100
  );
  --afm-color-on-success: var(--wp--preset--color--white);
  --afm-color-on-success-low: var(--wp--preset--color--success-200);
  --afm-color-on-success-lowest: var(--wp--preset--color--success-400);
  --afm-color-on-success-min: var(--wp--preset--color--success-500);
  --afm-color-success-lowest: var(--wp--preset--color--success-100);
  --afm-color-success-low: var(--wp--preset--color--success-200);
  --afm-color-success-tint: var(--wp--preset--color--success-500);
  --afm-color-success: var(--wp--preset--color--success-600);
  --afm-color-success-high: var(--wp--preset--color--success-700);
  --afm-color-success-highest: var(--wp--preset--color--success-800);
  --afm-color-on-success-container: var(--wp--preset--color--success-600);
  --afm-color-success-container: var(--wp--preset--color--success-100);
  --afm-color-success-container-low: var(--wp--preset--color--success-50);
  --afm-color-success-container-lowest: var(--wp--preset--color--success-25);
  --afm-color-success-outline: var(
    --wp--preset--color--success-500
  );
  --afm-color-success-outline-lowest: var(
    --wp--preset--color--success-100
  );
}

@media (max-width: 768px) {
  body {
    --layout--content-padding: var(--wp--custom--layout--content-padding-sm);
  }
}

body{
  display: flex;
  min-height: 100dvh;
  flex-grow: 1;
  flex-direction: column;
  background-color: var(--afm-color-surface);
  font-family: var(--afm-font-family);
  font-size: 1rem;
  line-height: 1.5rem;
  color: var(--afm-color-on-surface-highest);
}

/**
 * This injects Tailwind's component classes and any component classes
 * registered by plugins, then adds custom component classes.
 *
 * The `@import-glob` line imports all CSS files from the `components`
 * directory (except for `components.css`, which is imported on the following
 * line). This is meant to simplify the process of integrating styles from
 * JavaScript components or WordPress plugins.
 */

.prose{
  color: var(--tw-prose-body);
}

.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~="lead"], [class~="is-style-lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker{
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker{
  color: var(--tw-prose-bullets);
}

.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
  border-bottom: none;
}

.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
  border-left-style: solid;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before{
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after{
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before{
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after{
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before{
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after{
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  width: 100%;
  table-layout: auto;
  text-align: start;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  vertical-align: top;
}

.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose{
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-start: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-start: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}

.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-start: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-end: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-start: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-end: 0;
}

.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-bottom: 0;
}

.prose :where(blockquote > cite):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-body);
  font-style: normal;
  font-weight: 400;
}

.prose :where(blockquote > cite):not(:where([class~="not-prose"],[class~="not-prose"] *))::before{
  content: "\2014";
}

.prose :where(table.has-fixed-layout):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  table-layout: fixed;
  width: 100%;
}

.prose-neutral{
  --tw-prose-body: #404040;
  --tw-prose-headings: #171717;
  --tw-prose-lead: #525252;
  --tw-prose-links: #171717;
  --tw-prose-bold: #171717;
  --tw-prose-counters: #737373;
  --tw-prose-bullets: #d4d4d4;
  --tw-prose-hr: #e5e5e5;
  --tw-prose-quotes: #171717;
  --tw-prose-quote-borders: #e5e5e5;
  --tw-prose-captions: #737373;
  --tw-prose-kbd: #171717;
  --tw-prose-kbd-shadows: 23 23 23;
  --tw-prose-code: #171717;
  --tw-prose-pre-code: #e5e5e5;
  --tw-prose-pre-bg: #262626;
  --tw-prose-th-borders: #d4d4d4;
  --tw-prose-td-borders: #e5e5e5;
  --tw-prose-invert-body: #d4d4d4;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #a3a3a3;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #a3a3a3;
  --tw-prose-invert-bullets: #525252;
  --tw-prose-invert-hr: #404040;
  --tw-prose-invert-quotes: #f5f5f5;
  --tw-prose-invert-quote-borders: #404040;
  --tw-prose-invert-captions: #a3a3a3;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d4d4d4;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #525252;
  --tw-prose-invert-td-borders: #404040;
}

.assistant-chat-message{
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
  border-radius: 0.25rem;
  border-width: 1px;
  padding: 1rem;
}

.assistant-chat-message--user{
  border-color: var(--afm-color-gray-outline);
  background-color: var(--afm-color-gray-lowest);
}

.assistant-chat-message--assistant{
  border-color: var(--afm-color-success-outline);
  background-color: var(--afm-color-success-lowest);
}

.afm-button, .um.um a.um-button,
.um.um a.um-button.um-disabled:active,
.um.um a.um-button.um-disabled:focus,
.um.um a.um-button.um-disabled:hover,
.um.um input[type=submit].um-button,
.um.um input[type=submit].um-button:focus, form.ajax-auth button{
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.125rem;
  border-width: 1px;
  border-style: solid;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
  font-weight: 600;
  outline-width: 4px;
  outline-color: transparent;
  border-color: var(--afm-button--border--color);
  background-color: var(--afm-button--background--color);
}

.afm-button.afm-button, .um.um a.um-button,
.um.um a.um-button.um-disabled:active,
.um.um a.um-button.um-disabled:focus,
.um.um a.um-button.um-disabled:hover,
.um.um input[type=submit].um-button,
.um.um input[type=submit].um-button:focus, form.ajax-auth button{
  text-decoration-line: none;
  text-decoration: none;
  color: var(--afm-button--color);
}

.afm-button.afm-button.alignwide, .um.um a.alignwide.um-button,
.um.um a.alignwide.um-button.um-disabled:active,
.um.um a.alignwide.um-button.um-disabled:focus,
.um.um a.alignwide.um-button.um-disabled:hover,
.um.um input.alignwide[type=submit].um-button, form.ajax-auth button.alignwide{
  width: 100%;
}

.afm-button:hover, .um.um a.um-button:hover,
.um.um a.um-button.um-disabled:hover,
.um.um input[type=submit].um-button:hover, form.ajax-auth button:hover {
  background-color: var(--afm-button--background--color--hover);
  border-color: var(--afm-button--border--color--hover);
  color: var(--afm-button--color--hover);
}

.afm-button:focus, .um.um a.um-button:focus,
.um.um a.um-button.um-disabled:focus,
.um.um input[type=submit].um-button:focus, form.ajax-auth button:focus {
  outline-color: var(--afm-button--outline--color--focus);
}

.afm-button:disabled, .um.um a.um-button:disabled,
.um.um a.um-button.um-disabled:disabled:active,
.um.um a.um-button.um-disabled:disabled:focus,
.um.um a.um-button.um-disabled:disabled:hover,
.um.um input[type=submit].um-button:disabled, form.ajax-auth button:disabled {
  background-color: var(--afm-button--background--color--disabled);
  border-color: var(--afm-button--border--color--disabled);
  color: var(--afm-button--color--disabled);
  box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05);
}

.afm-button--display_block.afm-button--display_block{
  display: flex;
}

.afm-button--display_block.afm-button--display_block.alignleft, .afm-button--display_block.afm-button--display_block.alignright, .afm-button--display_block.afm-button--display_block.aligncenter{
  float: none;
  width: -moz-max-content;
  width: max-content;
  max-width: 100%;
}

.afm-button--display_block.afm-button--display_block.alignleft{
  margin-right: auto;
}

.afm-button--display_block.afm-button--display_block.alignright{
  margin-left: auto;
}

.afm-button--display_block.afm-button--display_block.aligncenter{
  margin-left: auto;
  margin-right: auto;
}

.afm-button__loading{
  position: absolute;
  top: 50%;
  left: 50%;
  display: none;
  aspect-ratio: 1 / 1;
  height: 60%;
  --tw-translate-x: -50%;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  opacity: 0.75;
  color: var(--afm-button--color);
}

.afm-button__loading svg{
  height: 100%;
  width: 100%;
}

.afm-button__postfix, .afm-button__prefix{
  display: flex;
  align-items: center;
}

.afm-button__postfix > :where([class^=icon-], [class*=" icon-"]), .afm-button__prefix > :where([class^=icon-], [class*=" icon-"]){
  font-size: 1.25rem;
  line-height: 1.875rem;
  font-weight: 400;
}

.afm-button--display_icon {
  line-height: 1em;
}

.afm-button--size_sm:where(:not(.afm-button--display_icon)){
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.875rem;
  padding-right: 0.875rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.afm-button--size_sm:where(.afm-button--display_icon){
  padding: 0.5rem;
}

.afm-button--size_md:where(:not(.afm-button--display_icon)){
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.afm-button--size_md:where(.afm-button--display_icon){
  padding: 0.625rem;
}

.afm-button--size_lg:where(:not(.afm-button--display_icon)){
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  font-size: 1rem;
  line-height: 1.5rem;
}

.afm-button--size_lg:where(.afm-button--display_icon){
  padding: 0.75rem;
}

.afm-button--size_xl:where(:not(.afm-button--display_icon)){
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  font-size: 1rem;
  line-height: 1.5rem;
  padding: 12px 20px;
}

.afm-button--size_xl:where(.afm-button--display_icon){
  padding: 0.875rem;
}

.afm-button--size_xl :where(.afm-button__postfix > :where([class^=icon-], [class*=" icon-"]), .afm-button__prefix > :where([class^=icon-], [class*=" icon-"])){
  font-size: 1.25rem;
  line-height: 1.875rem;
}

.afm-button--size_2xl:where(:not(.afm-button--display_icon)){
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
  padding-left: 1.75rem;
  padding-right: 1.75rem;
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.afm-button--size_2xl:where(.afm-button--display_icon){
  padding: 1rem;
}

.afm-button--size_2xl :where(.afm-button__postfix > :where([class^=icon-], [class*=" icon-"]), .afm-button__prefix > :where([class^=icon-], [class*=" icon-"])){
  font-size: 1.5rem;
  line-height: 2rem;
}

.afm-button--pending{
  position: relative;
}

.afm-button--pending .afm-button__loading{
  display: inline-flex;
}

.afm-button--pending .afm-button__content,
.afm-button--pending .afm-button__postfix,
.afm-button--pending .afm-button__prefix{
  visibility: hidden;
}

.afm-button--variant_contained:where(.afm-button--color_gray) {
  --afm-button--background--color: var(--afm-color-gray);
  --afm-button--background--color--hover: var(--afm-color-gray-tint);
  --afm-button--background--color--disabled: var(--afm-color-gray-low);
  --afm-button--color: var(--afm-color-on-gray);
  --afm-button--color--disabled: var(--afm-color-on-gray);
  --afm-button--outline--color--focus: var(--afm-color-on-gray-lowest);
}

.afm-button--variant_contained:where(.afm-button--color_primary) {
  --afm-button--background--color: var(--afm-color-primary);
  --afm-button--background--color--hover: var(--afm-color-primary-tint);
  --afm-button--background--color--disabled: var(--afm-color-primary-low);
  --afm-button--color: var(--afm-color-on-primary);
  --afm-button--color--disabled: var(--afm-color-on-primary);
  --afm-button--outline--color--focus: var(--afm-color-on-primary-lowest);
}

.afm-button--variant_contained:where(.afm-button--color_error) {
  --afm-button--background--color: var(--afm-color-error);
  --afm-button--background--color--hover: var(--afm-color-error-tint);
  --afm-button--background--color--disabled: var(--afm-color-error-low);
  --afm-button--color: var(--afm-color-on-error);
  --afm-button--color--disabled: var(--afm-color-on-error);
  --afm-button--outline--color--focus: var(--afm-color-on-error-lowest);
}

.afm-button--variant_contained:where(.afm-button--color_warning) {
  --afm-button--background--color: var(--afm-color-warning);
  --afm-button--background--color--hover: var(--afm-color-warning-tint);
  --afm-button--background--color--disabled: var(--afm-color-warning-low);
  --afm-button--color: var(--afm-color-on-warning);
  --afm-button--color--disabled: var(--afm-color-on-warning);
  --afm-button--outline--color--focus: var(--afm-color-on-warning-lowest);
}

.afm-button--variant_contained:where(.afm-button--color_success) {
  --afm-button--background--color: var(--afm-color-success);
  --afm-button--background--color--hover: var(--afm-color-success-tint);
  --afm-button--background--color--disabled: var(--afm-color-success-low);
  --afm-button--color: var(--afm-color-on-success);
  --afm-button--color--disabled: var(--afm-color-on-success);
  --afm-button--outline--color--focus: var(--afm-color-on-success-lowest);
}

.afm-button--variant_contained-light:where(.afm-button--color_gray) {
  --afm-button--background--color: var(--afm-color-gray-container-low);
  --afm-button--background--color--hover: var(--afm-color-gray-container);
  --afm-button--background--color--disabled: var(--afm-color-gray-container-lowest);
  --afm-button--color: var(--afm-color-on-gray-container);
  --afm-button--color--disabled: var(--afm-color-on-gray-lowest);
  --afm-button--outline--color--focus: var(--afm-color-gray-lowest);
}

.afm-button--variant_contained-light:where(.afm-button--color_primary) {
  --afm-button--background--color: var(--afm-color-primary-container-low);
  --afm-button--background--color--hover: var(--afm-color-primary-container);
  --afm-button--background--color--disabled: var(--afm-color-primary-container-lowest);
  --afm-button--color: var(--afm-color-on-primary-container);
  --afm-button--color--disabled: var(--afm-color-on-primary-lowest);
  --afm-button--outline--color--focus: var(--afm-color-primary-lowest);
}

.afm-button--variant_contained-light:where(.afm-button--color_error) {
  --afm-button--background--color: var(--afm-color-error-container-low);
  --afm-button--background--color--hover: var(--afm-color-error-container);
  --afm-button--background--color--disabled: var(--afm-color-error-container-lowest);
  --afm-button--color: var(--afm-color-on-error-container);
  --afm-button--color--disabled: var(--afm-color-on-error-lowest);
  --afm-button--outline--color--focus: var(--afm-color-error-lowest);
}

.afm-button--variant_contained-light:where(.afm-button--color_warning) {
  --afm-button--background--color: var(--afm-color-warning-container-low);
  --afm-button--background--color--hover: var(--afm-color-warning-container);
  --afm-button--background--color--disabled: var(--afm-color-warning-container-lowest);
  --afm-button--color: var(--afm-color-on-warning-container);
  --afm-button--color--disabled: var(--afm-color-on-warning-lowest);
  --afm-button--outline--color--focus: var(--afm-color-warning-lowest);
}

.afm-button--variant_contained-light:where(.afm-button--color_success) {
  --afm-button--background--color: var(--afm-color-success-container-low);
  --afm-button--background--color--hover: var(--afm-color-success-container);
  --afm-button--background--color--disabled: var(--afm-color-success-container-lowest);
  --afm-button--color: var(--afm-color-on-success-container);
  --afm-button--color--disabled: var(--afm-color-on-success-lowest);
  --afm-button--outline--color--focus: var(--afm-color-success-lowest);
}

.afm-button--variant_text:where(.afm-button--color_gray) {
  --afm-button--background--color--hover: var(--afm-color-gray-container-low);
  --afm-button--color: var(--afm-color-on-gray-container);
  --afm-button--outline--color--focus: var(--afm-color-gray-outline-lowest);
}

.afm-button--variant_text:where(.afm-button--color_primary) {
  --afm-button--background--color--hover: var(--afm-color-primary-container-low);
  --afm-button--color: var(--afm-color-on-primary-container);
  --afm-button--outline--color--focus: var(--afm-color-primary-outline-lowest);
}

.afm-button--variant_text:where(.afm-button--color_error) {
  --afm-button--background--color--hover: var(--afm-color-error-container-low);
  --afm-button--color: var(--afm-color-on-error-container);
  --afm-button--outline--color--focus: var(--afm-color-error-outline-lowest);
}

.afm-button--variant_text:where(.afm-button--color_warning) {
  --afm-button--background--color--hover: var(--afm-color-warning-container-low);
  --afm-button--color: var(--afm-color-on-warning-container);
  --afm-button--outline--color--focus: var(--afm-color-warning-outline-lowest);
}

.afm-button--variant_text:where(.afm-button--color_success) {
  --afm-button--background--color--hover: var(--afm-color-success-container-low);
  --afm-button--color: var(--afm-color-on-success-container);
  --afm-button--outline--color--focus: var(--afm-color-success-outline-lowest);
}

.afm-button--variant_inline:where(.afm-button--color_gray) {
  --afm-button--color: var(--afm-color-gray);
  --afm-button--color--hover: var(--afm-color-gray-high);
  --afm-button--outline--color--focus: var(--afm-color-gray-outline-lowest);
}

.afm-button--variant_inline:where(.afm-button--color_primary) {
  --afm-button--color: var(--afm-color-primary);
  --afm-button--color--hover: var(--afm-color-primary-high);
  --afm-button--outline--color--focus: var(--afm-color-primary-outline-lowest);
}

.afm-button--variant_inline:where(.afm-button--color_error) {
  --afm-button--color: var(--afm-color-error);
  --afm-button--color--hover: var(--afm-color-error-high);
  --afm-button--outline--color--focus: var(--afm-color-error-outline-lowest);
}

.afm-button--variant_inline:where(.afm-button--color_warning) {
  --afm-button--color: var(--afm-color-warning);
  --afm-button--color--hover: var(--afm-color-warning-high);
  --afm-button--outline--color--focus: var(--afm-color-warning-outline-lowest);
}

.afm-button--variant_inline:where(.afm-button--color_success) {
  --afm-button--color: var(--afm-color-success);
  --afm-button--color--hover: var(--afm-color-success-high);
  --afm-button--outline--color--focus: var(--afm-color-success-outline-lowest);
}

.afm-button--variant_contained, .afm-button--variant_contained-light {
  --afm-button--border--color: var(--afm-button--background--color);
  --afm-button--border--color--hover: var(--afm-button--background--color--hover);
  --afm-button--border--color--disabled: var(--afm-button--background--color--disabled);
  --afm-button--color--hover: var(--afm-button--color);
}

.afm-button--variant_outlined, .um.um a.um-button,
.um.um a.um-button.um-disabled:active,
.um.um a.um-button.um-disabled:focus,
.um.um a.um-button.um-disabled:hover,
.um.um input[type=submit].um-button,
.um.um input[type=submit].um-button:focus, form.ajax-auth button {
  --afm-button--background--color: var(--afm-color-surface);
  --afm-button--background--color--hover: var(--afm-color-surface-high);
  --afm-button--background--color--disabled: var(--afm-color-surface);
  --afm-button--border--color: var(--afm-color-surface-outline-low);
  --afm-button--border--color--hover: var(--afm-button--border--color);
  --afm-button--border--color--disabled: var(--afm-color-surface-outline-lowest);
  --afm-button--color: var(--afm-color-on-surface);
  --afm-button--color--hover: var(--afm-color-on-surface-high);
  --afm-button--color--disabled: var(--afm-color-on-surface-min);
  --afm-button--outline--color--focus: var(--afm-color-on-surface-lowest);
}

.afm-button--variant_text {
  --afm-button--background--color: transparent;
  --afm-button--background--color--disabled: transparent;
  --afm-button--border--color: transparent;
  --afm-button--border--color--hover: var(--afm-button--background--color--hover);
  --afm-button--border--color--disabled: transparent;
  --afm-button--color--hover: var(--afm-button--color);
  --afm-button--color--disabled: var(--wp--preset--color--gray-300);
}

.afm-button--variant_inline {
  --afm-button--background--color: transparent;
  --afm-button--background--color--hover: transparent;
  --afm-button--background--color--disabled: transparent;
  --afm-button--border--color: transparent;
  --afm-button--border--color--hover: transparent;
  --afm-button--border--color--disabled: transparent;
  --afm-button--color--disabled: var(--afm-color-on-surface-min);
  padding: 0;
}

.footer-menu{
  display: flex;
  -moz-column-gap: 2rem;
       column-gap: 2rem;
  row-gap: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 600;
  color: var(--afm-color-on-gray-lowest);
}

@media not all and (min-width: 640px){
  .footer-menu{
    flex-direction: column;
    align-items: center;
  }
}

.header__menu ul{
  display: flex;
  -moz-column-gap: 2rem;
       column-gap: 2rem;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 600;
  color: var(--afm-color-on-surface-low);
}

.afm-icon-button{
  display: inline-flex;
  align-content: center;
  align-items: center;
  justify-content: center;
  text-decoration-line: none;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.afm-icon-button--rounded{
  border-radius: 9999px;
}

.afm-icon-button--size_md{
  width: 2.5rem;
  height: 2.5rem;
  font-size: 1rem;
  line-height: 1.5rem;
}

.afm-icon-button--variant_contained.afm-icon-button--color_gray {
  background-color: var(--afm-color-gray-container);
  color: var(--afm-color-on-gray-container);
}

.afm-icon-button--variant_contained.afm-icon-button--color_gray:hover {
  background-color: var(--afm-color-gray-container-low);
}

.afm-icon-button--variant_contained.afm-icon-button--color_primary {
  background-color: var(--afm-color-primary-container);
  color: var(--afm-color-on-primary-container);
}

.afm-icon-button--variant_contained.afm-icon-button--color_primary:hover {
  background-color: var(--afm-color-primary-container-low);
}

.afm-icon-button--variant_contained.afm-icon-button--color_error {
  background-color: var(--afm-color-error-container);
  color: var(--afm-color-on-error-container);
}

.afm-icon-button--variant_contained.afm-icon-button--color_error:hover {
  background-color: var(--afm-color-error-container-low);
}

.afm-icon-button--variant_contained.afm-icon-button--color_warning {
  background-color: var(--afm-color-warning-container);
  color: var(--afm-color-on-warning-container);
}

.afm-icon-button--variant_contained.afm-icon-button--color_warning:hover {
  background-color: var(--afm-color-warning-container-low);
}

.afm-icon-button--variant_contained.afm-icon-button--color_success {
  background-color: var(--afm-color-success-container);
  color: var(--afm-color-on-success-container);
}

.afm-icon-button--variant_contained.afm-icon-button--color_success:hover {
  background-color: var(--afm-color-success-container-low);
}

input{
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: var(--afm-color-gray-outline);
  font-family: var(--afm-font-family);
}

form.ajax-auth{
  border-width: 1px;
  border-color: var(--afm-color-surface-outline-low);
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

form.ajax-auth .lh1{
  margin-top: 0px;
  font-size: 1.5rem;
  line-height: 2rem;
  color: var(--afm-color-on-surface-low);
}

form.ajax-auth .accept_terms_and_conditions{
  display: flex;
  align-items: baseline;
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
  font-size: 0.75rem;
  line-height: 1.125rem;
}

form.ajax-auth button{
  background-color: var(--afm-color-primary);
  color: var(--afm-color-on-primary);
}

form.ajax-auth button:hover{
  background-color: var(--afm-color-primary-tint);
  color: var(--afm-color-on-primary);
}

form.ajax-auth input[type=tel], form.ajax-auth input[type=text]{
  height: 2.5rem !important;
}

form.ajax-auth input[type=text]{
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

form.ajax-auth .iti__selected-flag {
  padding: 0 6px 0 4px;
}

body {
  font-family: var(--wp--preset--font-family--base);
  --lb-ui-color-text: var(--afm-color-on-surface);
  --lb-ui-color-heading-text: var(--afm-color-on-surface-highest);
  --lb-ui-color-link-text: var(--afm-color-primary);
}

.prose-headings :is(:where(h1):not(:where([class~=not-prose], [class~=not-prose] *))){
  font-size: 2.25rem;
  line-height: 2.75rem;
  font-weight: 600;
}

.prose-headings :is(:where(h2):not(:where([class~=not-prose], [class~=not-prose] *))){
  font-size: 1.875rem;
  line-height: 2.375rem;
  font-weight: 600;
}

.prose-headings :is(:where(h3):not(:where([class~=not-prose], [class~=not-prose] *))){
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 600;
}

.prose-content :is(:where(p):not(:where([class~=not-prose], [class~=not-prose] *))){
  font-size: 1rem;
  line-height: 1.5rem;
}

.prose-content :is(:where(ul, ol):not(:where([class~=not-prose], [class~=not-prose] *))){
  display: flex;
  flex-direction: column;
  row-gap: 0.5rem;
  padding-left: 0px;
  font-size: 1rem;
  line-height: 1.5rem;
}

.prose-content :is(:where(img):not(:where([class~=not-prose], [class~=not-prose] *))){
  width: 100%;
}

.prose-spaces :is(:where(h1, h2, h3, h4, h5, h6, p, ul, ol, blockquote, .wp-block-image, .wp-block-columns, .lb-group-list, .lb-review-details, .lb-review-list, .lb-author-block, [id*=sp_easy_accordion], .lb-step-list, .wp-block-casino-card, .wp-block-bonus-card):not(:where([class~=not-prose], [class~=not-prose] *))):first-child {
  margin-block-start: 0;
}

.prose-spaces :is(:where(h1, h2, h3, h4, h5, h6, p, ul, ol, blockquote, .wp-block-image, .wp-block-columns, .lb-group-list, .lb-review-details, .lb-review-list, .lb-author-block, [id*=sp_easy_accordion], .lb-step-list, .wp-block-casino-card, .wp-block-bonus-card):not(:where([class~=not-prose], [class~=not-prose] *))):last-child {
  margin-block-end: 0;
}

.prose-spaces :is(:where(.wp-block-columns, .lb-group-list):not(:where([class~=not-prose], [class~=not-prose] *))){
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.prose-spaces :is(:where(h1):not(:where([class~=not-prose], [class~=not-prose] *))){
  margin-top: 3rem;
  margin-bottom: 2rem;
}

.prose-spaces :is(:where(h2):not(:where([class~=not-prose], [class~=not-prose] *))){
  margin-top: 3rem;
  margin-bottom: 1.5rem;
}

.prose-spaces :is(:where(h3):not(:where([class~=not-prose], [class~=not-prose] *))){
  margin-top: 2.5rem;
  margin-bottom: 1rem;
}

@media (min-width: 640px){
  .prose-spaces :is(:where(h3):not(:where([class~=not-prose], [class~=not-prose] *))){
    margin-top: 3rem;
  }
}

.prose-spaces :is(:where(p, .wp-block-image):not(:where([class~=not-prose], [class~=not-prose] *))){
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.prose-spaces :is(:where(ul, ol):not(:where([class~=not-prose], [class~=not-prose] *))){
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
}

.prose-spaces :is(:where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *))){
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.prose-spaces :is(:where(.afm-post-info):not(:where([class~=not-prose], [class~=not-prose] *))){
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.prose-colors :is(:where(h1, h2, h3, h4, h5, h6):not(:where([class~=not-prose], [class~=not-prose] *))) {
  color: var(--lb-ui-color-heading-text);
}

.prose-colors :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
  color: var(--lb-ui-color-link-text);
}

.prose-colors :is(:where(p, ul, ol):not(:where([class~=not-prose], [class~=not-prose] *))) {
  color: var(--lb-ui-color-text);
}

.um-form:has(input[value=delete]) .um-field-password {
  display: none;
}

.um.um a.um-button,
.um.um a.um-button.um-disabled:active,
.um.um a.um-button.um-disabled:focus,
.um.um a.um-button.um-disabled:hover,
.um.um input[type=submit].um-button,
.um.um input[type=submit].um-button:focus{
  background-color: var(--afm-color-primary);
  color: var(--afm-color-on-primary);
}

.um.um a.um-button:hover,
.um.um a.um-button.um-disabled:active:hover,
.um.um a.um-button.um-disabled:focus:hover,
.um.um a.um-button.um-disabled:hover:hover,
.um.um input[type=submit].um-button:hover,
.um.um input[type=submit].um-button:focus:hover{
  background-color: var(--afm-color-primary-tint);
  color: var(--afm-color-on-primary);
}

/**
 * This injects Tailwind's utility classes and any utility classes registered
 * by plugins, then adds custom utility classes.
 */

.sr-only{
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible{
  visibility: visible;
}

.static{
  position: static;
}

.col-\[1\/-1\]{
  grid-column: 1/-1;
}

.mx-auto{
  margin-left: auto;
  margin-right: auto;
}

.my-1{
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.my-3{
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
}

.mb-2{
  margin-bottom: 0.5rem;
}

.mb-4{
  margin-bottom: 1rem;
}

.mb-7{
  margin-bottom: 1.75rem;
}

.mt-2{
  margin-top: 0.5rem;
}

.mt-3{
  margin-top: 0.75rem;
}

.block{
  display: block;
}

.inline{
  display: inline;
}

.flex{
  display: flex;
}

.table{
  display: table;
}

.grid{
  display: grid;
}

.h-7{
  height: 1.75rem;
}

.h-\[55dvh\]{
  height: 55dvh;
}

.max-h-64{
  max-height: 16rem;
}

.max-h-full{
  max-height: 100%;
}

.min-h-80{
  min-height: 20rem;
}

.w-auto{
  width: auto;
}

.w-full{
  width: 100%;
}

.max-w-3xl{
  max-width: 48rem;
}

.max-w-4xl{
  max-width: 56rem;
}

.max-w-content{
  max-width: calc(1280px - 2 * var(--layout--content-padding));
}

.max-w-lg{
  max-width: 32rem;
}

.flex-1{
  flex: 1 1 0%;
}

.grow{
  flex-grow: 1;
}

.transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.resize-none{
  resize: none;
}

.grid-cols-\[1fr_1fr\]{
  grid-template-columns: 1fr 1fr;
}

.flex-col{
  flex-direction: column;
}

.flex-col-reverse{
  flex-direction: column-reverse;
}

.items-center{
  align-items: center;
}

.justify-center{
  justify-content: center;
}

.justify-between{
  justify-content: space-between;
}

.gap-x-3{
  -moz-column-gap: 0.75rem;
       column-gap: 0.75rem;
}

.gap-x-5{
  -moz-column-gap: 1.25rem;
       column-gap: 1.25rem;
}

.gap-x-6{
  -moz-column-gap: 1.5rem;
       column-gap: 1.5rem;
}

.gap-y-6{
  row-gap: 1.5rem;
}

.overflow-auto{
  overflow: auto;
}

.overflow-y-auto{
  overflow-y: auto;
}

.whitespace-pre-line{
  white-space: pre-line;
}

.rounded{
  border-radius: 0.25rem;
}

.border{
  border-width: 1px;
}

.border-gray-300{
  --tw-border-opacity: 1;
  border-color: rgb(208 213 221 / var(--tw-border-opacity));
}

.border-surface-outline-low{
  border-color: var(--afm-color-surface-outline-low);
}

.border-surface-outline-lowest{
  border-color: var(--afm-color-surface-outline-lowest);
}

.bg-gray-highest{
  background-color: var(--afm-color-gray-highest);
}

.bg-surface-highest{
  background-color: var(--afm-color-surface-highest);
}

.bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.p-2{
  padding: 0.5rem;
}

.p-4{
  padding: 1rem;
}

.px-content{
  padding-left: var(--layout--content-padding);
  padding-right: var(--layout--content-padding);
}

.py-10{
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.py-3{
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-4{
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pb-5{
  padding-bottom: 1.25rem;
}

.pt-10{
  padding-top: 2.5rem;
}

.text-left{
  text-align: left;
}

.text-center{
  text-align: center;
}

.text-body-lg{
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-body-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-body-xs{
  font-size: 0.75rem;
  line-height: 1.125rem;
}

.font-bold{
  font-weight: 700;
}

.text-error-high{
  color: var(--afm-color-error-high);
}

.text-on-gray-min{
  color: var(--afm-color-on-gray-min);
}

.text-on-surface{
  color: var(--afm-color-on-surface);
}

.text-on-surface-high{
  color: var(--afm-color-on-surface-high);
}

.text-on-surface-low{
  color: var(--afm-color-on-surface-low);
}

.shadow{
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md{
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm{
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.transition-all{
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.content-none{
  --tw-content: none;
  content: var(--tw-content);
}

/**
 * Custom styles to immediately follow Tailwind’s `utilities` layer
 *
 * Add your own utility classes to this theme. Complex utility classes should
 * be added using Tailwind’s plugin system:
 *
 * https://tailwindcss.com/docs/plugins#adding-utilities
 */

.hover\:bg-surface-max:hover{
  background-color: var(--afm-color-surface-max);
}

@media not all and (min-width: 640px){
  .max-sm\:col-\[1\/-1\]{
    grid-column: 1/-1;
  }
}

@media (min-width: 640px){
  .sm\:mb-10{
    margin-bottom: 2.5rem;
  }

  .sm\:h-80{
    height: 20rem;
  }

  .sm\:h-\[45dvh\]{
    height: 45dvh;
  }

  .sm\:gap-x-10{
    -moz-column-gap: 2.5rem;
         column-gap: 2.5rem;
  }

  .sm\:py-12{
    padding-top: 3rem;
    padding-bottom: 3rem;
  }

  .sm\:py-14{
    padding-top: 3.5rem;
    padding-bottom: 3.5rem;
  }

  .sm\:py-20{
    padding-top: 5rem;
    padding-bottom: 5rem;
  }

  .sm\:py-32{
    padding-top: 8rem;
    padding-bottom: 8rem;
  }
}

@media (min-width: 768px){
  .md\:py-5{
    padding-top: 1.25rem;
    padding-bottom: 1.25rem;
  }
}